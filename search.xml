<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>字符逆序</title>
    <url>/2020/03/04/%E5%AD%97%E7%AC%A6%E9%80%86%E5%BA%8F/</url>
    <content><![CDATA[<p><strong>输入</strong></p>
<p>一个字符串，可以有空格。</p>
<p><strong>输出</strong></p>
<p>逆序的字符串。</p>
<a id="more"></a>

<p><strong>解答</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(input()[::<span class="number">-1</span>])</span><br></pre></td></tr></table></figure>

<p><strong>笔记</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list[start:end:span]</span><br></pre></td></tr></table></figure>

<p>遍历 [start,end]，间隔为 span，当 span&gt;0 时顺序遍历, 当 span&lt;0 时，逆着遍历。start 不输入则默认为 0，end 不输入默认为长度。</p>
]]></content>
  </entry>
  <entry>
    <title>字符串分割</title>
    <url>/2020/03/03/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E5%89%B2/</url>
    <content><![CDATA[<p><strong>输入</strong></p>
<p>首先输入数字n，表示要输入多少个字符串。连续输入字符串(输出次数为N,字符串长度小于100)。如：</p>
<p>2<br>abc<br>123456789</p>
<p><strong>输出</strong></p>
<p>按长度为8拆分每个字符串后输出到新的字符串数组，长度不是8整数倍的字符串请在后面补数字0，空字符串不处理。如：</p>
<p>abc00000<br>12345678<br>90000000</p>
<a id="more"></a>

<p><strong>解答</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        n = int(input())</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">            s = input()</span><br><span class="line">            <span class="keyword">while</span> len(s)&gt;<span class="number">8</span>:</span><br><span class="line">                print(s[:<span class="number">8</span>])</span><br><span class="line">                s = s[<span class="number">8</span>:]</span><br><span class="line">            print(s.ljust(<span class="number">8</span>,<span class="string">'0'</span>))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p><strong>笔记</strong></p>
<p>ljust() 方法返回一个原字符串左对齐,并使用空格填充至指定长度的新字符串。如果指定的长度小于原字符串的长度则返回原字符串。</p>
]]></content>
  </entry>
  <entry>
    <title>自守数</title>
    <url>/2020/02/29/%E8%87%AA%E5%AE%88%E6%95%B0/</url>
    <content><![CDATA[<p><strong>题目</strong></p>
<p>自守数是指一个数的平方的尾数等于该数自身的自然数。例如：25^2 = 625，76^2 = 5776，9376^2 = 87909376。请求出n以内的自守数的个数。</p>
<a id="more"></a>

<p><strong>解答</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        a, num = int(input()), <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, a + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> str(i ** <span class="number">2</span>).endswith(str(i)):</span><br><span class="line">                num += <span class="number">1</span></span><br><span class="line">        print(num)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p>输入：2000</p>
<p>输出：8</p>
<p><strong>笔记</strong></p>
<p>range(0,n)不包含n，所以记得+1。</p>
<p>endswith()判断字符串是否以指定后缀结尾。</p>
]]></content>
  </entry>
  <entry>
    <title>记负均正</title>
    <url>/2020/02/29/%E8%AE%B0%E8%B4%9F%E5%9D%87%E6%AD%A3/</url>
    <content><![CDATA[<h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p><strong>输入</strong></p>
<p>首先输入一个正整数n，然后输入n个整数。如：</p>
<p>3<br>-1 1 3</p>
<p><strong>输出</strong></p>
<p>负数的个数，和所有正整数的平均值。如：</p>
<p>1 2.0</p>
 <a id="more"></a>

<p><strong>解答</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        a = int(input())</span><br><span class="line">        nums = map(int,input().split())</span><br><span class="line">        pos = []</span><br><span class="line">        neg = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> i &gt; <span class="number">0</span>:</span><br><span class="line">                pos.append(i)</span><br><span class="line">            <span class="keyword">elif</span> i &lt; <span class="number">0</span>:</span><br><span class="line">                neg += <span class="number">1</span></span><br><span class="line">        print(str(neg)+<span class="string">' 0'</span><span class="keyword">if</span> <span class="keyword">not</span> pos <span class="keyword">else</span> str(neg)+<span class="string">' '</span>+<span class="string">'&#123;0:.1f&#125;'</span>.format(sum(pos)/len(pos)))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p><strong>笔记</strong></p>
<p>split()默认以空格拆分，对字符串进行切片，变为一个列表[‘-1’,’1’,’3’]。</p>
<p>map()对列表中的每个元素调用函数int()，转换为整型， 即列表变为 [-1,1,3]。</p>
<p>‘{:.1f}’.format()格式化字符串，保留小数点后两位。</p>
<h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><p><strong>输入</strong></p>
<p>任意个整数</p>
<p><strong>输出</strong></p>
<p>负数个数以及所有非负数的平均值</p>
<p><strong>解答</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a,pos,neg = input().split(),[],[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    neg.append(int(i)) <span class="keyword">if</span> int(i)&lt;<span class="number">0</span> <span class="keyword">else</span> pos.append(int(i))</span><br><span class="line">print(len(neg))</span><br><span class="line">print(round(sum(pos)/len(pos),<span class="number">1</span>) <span class="keyword">if</span> pos <span class="keyword">else</span> <span class="string">'0.0'</span>)</span><br></pre></td></tr></table></figure>

<p><strong>笔记</strong></p>
<p>round() 方法返回浮点数x的四舍五入值。</p>
<blockquote>
<p>注：round函数并不总是严格数学上的的四舍五入。在机器中浮点数不一定能精确表达，因为换算成一串1和0后可能是无限位数的，机器已经做出了截断处理。那么在机器中保存的2.675这个数字就比实际数字要小那么一点点。这一点点就导致了它离2.67要更近一点点，所以保留两位小数时就近似到了2.67。因此，除非对精确度没什么要求，否则尽量避开用round()函数。</p>
<p>近似计算的其他选择：</p>
<ul>
<li>使用math模块中的一些函数，比如math.ceiling（天花板除法）。</li>
<li>python自带整除，python2中是/，3中是//，还有div函数。</li>
<li>字符串格式化可以做截断使用，例如 “%.2f” % value（保留两位小数并变成字符串……如果还想用浮点数请披上float()的外衣）。</li>
<li>对浮点数精度要求如果很高的话，用decimal模块。</li>
</ul>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>hexo的一些tips</title>
    <url>/2020/02/28/hexo%E7%9A%84%E4%B8%80%E4%BA%9Btips/</url>
    <content><![CDATA[<h4 id="预览"><a href="#预览" class="headerlink" title="预览"></a><a href="https://blog.csdn.net/RayDon03/article/details/104441437" target="_blank" rel="noopener">预览</a></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure>

<p>放在代码段中无效。设置为代码格式依然有效。</p>
<a id="more"></a>

<h4 id="底部桃心-底部隐藏-站内搜索"><a href="#底部桃心-底部隐藏-站内搜索" class="headerlink" title="底部桃心/底部隐藏/站内搜索"></a><a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">底部桃心/底部隐藏/站内搜索</a></h4><p>试了一下这里也可以www<i class="fa fa-heart" aria-hidden="true"></i><i class="fa fa-heart" aria-hidden="true"></i></p>
<h4 id="创建新文章时"><a href="#创建新文章时" class="headerlink" title="创建新文章时"></a>创建新文章时</h4><p>输入<code>hexo new &quot;新文章&quot;</code>，注意双引号不能用单引号代替。否则生成的标题会有单引号，还要手动删很麻烦。</p>
<h4 id="ERROR-Deployer-not-found-git"><a href="#ERROR-Deployer-not-found-git" class="headerlink" title="ERROR Deployer not found: git"></a>ERROR Deployer not found: git</h4><p>输入</p>
<p><code>npm install hexo-deployer-git --save</code></p>
<h4 id="设置文章密码"><a href="#设置文章密码" class="headerlink" title="设置文章密码"></a><a href="http://dbase.cc/2017/03/31/tools/Hexo%E6%96%87%E7%AB%A0%E7%9A%84%E5%AF%86%E7%A0%81%E8%AE%BF%E9%97%AE/" target="_blank" rel="noopener">设置文章密码</a></h4>]]></content>
  </entry>
  <entry>
    <title>爬取placekitten上的图片</title>
    <url>/2020/02/28/%E7%88%AC%E5%8F%96placekitten%E4%B8%8A%E7%9A%84%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line">response = urllib.request.urlopen(<span class="string">'http://placekitten.com/200/300'</span>)</span><br><span class="line">cat_img = response.read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'cat_200x300'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f: <span class="comment"># wb:以二进制格式打开一个文件只用于写入</span></span><br><span class="line">    f.write(cat_img)</span><br></pre></td></tr></table></figure>

<p>结果保存在和.py同一个文件夹里。</p>
<p>把cat_200x300文件后缀名改成jpg就可以看到了。</p>
]]></content>
  </entry>
  <entry>
    <title>今天建立了博客</title>
    <url>/2020/02/26/%E4%BB%8A%E5%A4%A9%E5%BB%BA%E7%AB%8B%E4%BA%86%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>嘻嘻嘻</p>
]]></content>
  </entry>
</search>
